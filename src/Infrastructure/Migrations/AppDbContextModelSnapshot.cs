// <auto-generated />
using System;
using AppCoreApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppCoreApi.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SavedFileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.DownloadProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.ToTable("DownloadProcesses");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("MailContent")
                        .HasColumnType("text");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Receiver")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReceiverCC")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sender")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.EmailAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("EmailId");

                    b.ToTable("EmailAttachments");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.FunctionInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleInfoId");

                    b.ToTable("FunctionInfos");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.JobConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("InterfaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<bool?>("IsStoredProcedure")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobConfigurations");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Kuisioner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AktifDari")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AktifSampai")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("Judul")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kuisioners");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.KuisionerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("KontenSoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KuisionerId")
                        .HasColumnType("int");

                    b.Property<int?>("KunciJawaban")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("PIlihan2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pilihan1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pilihan3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KuisionerId");

                    b.HasIndex("SoalId");

                    b.ToTable("KuisionerDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Lookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.LookupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<int>("LookupId")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LookupId");

                    b.ToTable("LookupDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.ModuleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<int?>("ParentModuleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModuleInfos");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoreRoles");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDownload")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowRead")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowUpload")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("FunctionInfoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionInfoId");

                    b.HasIndex("RoleId");

                    b.ToTable("CoreRoleDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleManagementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllowCreate")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowDownload")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowPrint")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowUpdate")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowUpload")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("FunctionInfoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleManagementId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<bool?>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionInfoId");

                    b.HasIndex("RoleManagementId");

                    b.ToTable("RoleDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.SchedulerConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CronExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("IntervalTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IntervalValue")
                        .HasColumnType("int");

                    b.Property<int?>("IntervalValue2")
                        .HasColumnType("int");

                    b.Property<int?>("IntervalValue3")
                        .HasColumnType("int");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("JobTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringJobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntervalTypeId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("SchedulerConfigurations");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.SchedulerCronInterval", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("MainRecordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchedulerCronIntervals");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Soal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("Konten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainRecordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Soals");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.SpResultNumberGenerator", b =>
                {
                    b.Property<string>("NumberGenerated")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SpResultNumberGenerators");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserInfo", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserInfoId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserRoleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DraftFromUpload")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDraftRecord")
                        .HasColumnType("int");

                    b.Property<int?>("MainRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadValidationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadValidationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserRoleDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.DownloadProcess", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.FunctionInfo", "FunctionInfo")
                        .WithMany()
                        .HasForeignKey("FunctionId");

                    b.Navigation("FunctionInfo");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.EmailAttachment", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Email", "Email")
                        .WithMany("EmailAttachments")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.FunctionInfo", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.ModuleInfo", "ModuleInfo")
                        .WithMany()
                        .HasForeignKey("ModuleInfoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ModuleInfo");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.KuisionerDetail", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Kuisioner", "Kuisioner")
                        .WithMany("KuisionerDetail")
                        .HasForeignKey("KuisionerId");

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Soal", "Soal")
                        .WithMany()
                        .HasForeignKey("SoalId");

                    b.Navigation("Kuisioner");

                    b.Navigation("Soal");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.LookupDetail", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Lookup", "Lookup")
                        .WithMany("LookupDetails")
                        .HasForeignKey("LookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lookup");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleDetail", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.FunctionInfo", "FunctionInfo")
                        .WithMany()
                        .HasForeignKey("FunctionInfoId");

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Role", "Role")
                        .WithMany("RoleDetails")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionInfo");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleManagementDetail", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.FunctionInfo", "FunctionInfo")
                        .WithMany()
                        .HasForeignKey("FunctionInfoId");

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.RoleManagement", "RoleManagement")
                        .WithMany("RoleManagementDetail")
                        .HasForeignKey("RoleManagementId");

                    b.Navigation("FunctionInfo");

                    b.Navigation("RoleManagement");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.SchedulerConfiguration", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.SchedulerCronInterval", "IntervalType")
                        .WithMany()
                        .HasForeignKey("IntervalTypeId");

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.JobConfiguration", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId");

                    b.Navigation("IntervalType");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserRole", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserRoleDetail", b =>
                {
                    b.HasOne("AppCoreApi.ApplicationCore.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppCoreApi.ApplicationCore.Entities.UserRole", "UserRole")
                        .WithMany("UserRoleDetails")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Email", b =>
                {
                    b.Navigation("EmailAttachments");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Kuisioner", b =>
                {
                    b.Navigation("KuisionerDetail");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Lookup", b =>
                {
                    b.Navigation("LookupDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.Role", b =>
                {
                    b.Navigation("RoleDetails");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.RoleManagement", b =>
                {
                    b.Navigation("RoleManagementDetail");
                });

            modelBuilder.Entity("AppCoreApi.ApplicationCore.Entities.UserRole", b =>
                {
                    b.Navigation("UserRoleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
